---
# This playbook install the base config app

- name: start search head cluster node
  tags:
    - splunk
    - search_head
    - shcluster
  debug:
    msg: "Configuring search head cluster node"

- name: set global permissions for comment macro
  include_tasks: comment_macro.yml
  tags:
    - splunk
    - search_head
    - shcluster
    - shsettings
    - comment_macro
  when: 
    - inventory_hostname == splunk_shc_host_list|first
    - splunk_installed_version is version_compare('8.1.0', '<')

- name: check if shcluster config is initialized
  tags:
    - splunk
    - search_head
    - shcluster
  shell: "{{ splunk_home }}/bin/splunk btool server list shclustering | egrep -e '^disabled = true$'"
  become: yes
  become_user: "{{ splunk_user }}"
  register: need_shcluster_init
  check_mode: no
  failed_when: "need_shcluster_init.rc > 1"
  changed_when: "need_shcluster_init.rc == 0"

- name: init shcluster member
  tags:
    - splunk
    - search_head
    - shcluster
  command: "{{ splunk_home }}/bin/splunk init shcluster-config -shcluster_label {{ splunk_shc_label }} -mgmt_uri https://{{ inventory_hostname }}:8089 -replication_port {{splunk_shc_replication_port}} -secret '{{splunk_shc_pass}}' -conf_deploy_fetch_url https://{{splunk_shc_deployer}}:8089 -auth admin:{{splunk_admin_password}}"
  become: yes
  become_user: "{{ splunk_user }}"
  when: need_shcluster_init.rc == 0

- name: restart splunk for cluster init (service restart)
  tags:
    - splunk
    - search_head
    - shcluster
  include_role:
    name: splunk_software
    tasks_from: restart_splunk
  when: need_shcluster_init.rc == 0

- name: wait for splunkd port
  tags:
    - splunk
    - search_head
    - shcluster
  include_role:
    name: splunk_common
    tasks_from: wait_for_splunkd_port
  when: need_shcluster_init.rc == 0

# If we have plenty of apps, splunkd does several restarts and needs some time
- name: wait for splunkd full service
  tags:
    - splunk
    - search_head
    - shcluster
  include_role:
    name: splunk_common
    tasks_from: wait_for_splunkd_full
  when: need_shcluster_init.rc == 0

- name: check shcluster status
  tags:
    - splunk
    - search_head
    - shcluster
  command: "{{ splunk_home }}/bin/splunk show shcluster-status -auth admin:{{ splunk_admin_password }}"
  become: yes
  become_user: "{{ splunk_user }}"
  register: shcluster_status
  check_mode: no
  failed_when: shcluster_status.rc != 0 and shcluster_status.rc != 22
  changed_when: shcluster_status.stdout.find('service_ready_flag') == -1

- name: bootstrap search head cluster
  tags:
    - splunk
    - search_head
    - shcluster
    - shc_bootstrap
  command: "{{ splunk_home }}/bin/splunk bootstrap shcluster-captain -auth admin:{{ splunk_admin_password }}"
  become: yes
  become_user: "{{ splunk_user }}"
  when: inventory_hostname == splunk_shc_host_list|first and shcluster_status.changed == true

- name: wait for the search head cluster status to be available
  tags:
    - splunk
    - search_head
    - shcluster
  command: "{{ splunk_home }}/bin/splunk show shcluster-status -auth admin:{{ splunk_admin_password }}"
  become: yes
  become_user: "{{ splunk_user }}"
  check_mode: no
  register: shcluster_ready
  until: "shcluster_ready.stdout.find('service_ready_flag') != -1"
  retries: 15
  delay: 10
  delegate_to: "{{splunk_shc_host_list|first}}"
  when: inventory_hostname != splunk_shc_host_list|first and shcluster_status.changed == true

- name: add node to search head cluster
  tags:
    - splunk
    - search_head
    - shcluster
    - shc_add_member
  command: "{{ splunk_home }}/bin/splunk add shcluster-member -current_member_uri https://{{splunk_shc_host_list|first}}:8089 -auth admin:{{ splunk_admin_password }}"
  become: yes
  become_user: "{{ splunk_user }}"
  when: inventory_hostname != splunk_shc_host_list|first and shcluster_status.changed == true

- name: find splunk servername
  tags:
    - splunk
    - search_head
    - shcluster
    - shc_add_member
  command: "{{ splunk_home }}/bin/splunk show servername -auth admin:{{ splunk_admin_password }}"
  become: yes
  become_user: "{{ splunk_user }}"
  check_mode: no
  changed_when: false
  register: splunk_servername
  when: inventory_hostname != splunk_shc_host_list|first and shcluster_status.changed == true

- name: wait for the node to join the cluster
  tags:
    - splunk
    - search_head
    - shcluster
  command: "{{ splunk_home }}/bin/splunk show shcluster-status -auth admin:{{ splunk_admin_password }}"
  become: yes
  become_user: "{{ splunk_user }}"
  check_mode: no
  register: shcluster_join
  until: "shcluster_join.stdout.find('label :' + splunk_servername.stdout.split(':')[1]) != -1"
  retries: 15
  delay: 10
  when: inventory_hostname != splunk_shc_host_list|first and shcluster_status.changed == true

- name: check for first shc bundle push
  tags:
    - splunk
    - search_head
    - shcluster
  stat:
    path: "{{ splunk_home }}/var/run/splunk/deploy/apps"
    follow: yes
  become: yes
  become_user: "{{ splunk_user }}"
  delegate_to: "{{ splunk_shc_deployer }}"
  register: deploy_apps_stat
  when:
    - inventory_hostname == splunk_shc_host_list|last
    - shcluster_status.changed == true

- name: push shc bundle if needed
  tags:
    - splunk
    - search_head
    - shcluster
  debug:
    msg: register shc bundle push
  notify: wait for SHC service ready and call push bundle
  changed_when: deploy_apps_stat.stat.exists|default(false) == false
  when: 
    - deploy_apps_stat.stat.exists|default(false) == false
    - inventory_hostname == splunk_shc_host_list|last
    - shcluster_status.changed == true

# Add single indexers as search peers
- include_tasks: search_peers.yml

- name: call update_dserver from role monitoring_console
  tags:
    - splunk
    - search_head
    - shcluster
    - splunk_baseconfig
    - monitoring_console
    - dserver
  include_role:
    name: monitoring_console
    tasks_from: update_dserver
  vars:
    splunk_dservers: "[ '{{ inventory_hostname }}' ]"
  when: splunk_monitoring_console|default()|length > 0 and inventory_hostname not in groups.role_monitoring_console
