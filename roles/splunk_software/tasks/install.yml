---
# This playbook install the apps required in a server

- name: create splunk install dir
  tags:
    - splunk
    - splunk_software
    - splunk_install
  file:
    path: "{{ splunk_install_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: create splunk directory
  tags:
    - splunk
    - splunk_software
    - splunk_install
  file:
    path: "{{ splunk_home }}"
    state: directory
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
    mode: 0755

- name: find target version
  tags:
    - splunk
    - splunk_software
    - splunk_install
  include_tasks: find_target_version.yml

- name: upload and extract the splunk software
  tags:
    - splunk
    - splunk_software
    - splunk_install
  include_tasks: upload_and_extract.yml

- name: set enable boot-start args
  tags:
    - splunk
    - splunk_software
    - splunk_install
  include_tasks: set_enable_boot_start_args.yml

- name: copy shared splunk.secret file
  tags:
    - splunk
    - splunk_software
    - splunk_install
    - splunk_secret
  copy:
    src: "{{ splunk_auth_dir }}/{{ splunk_install_app }}_splunk.secret"
    dest: "{{ splunk_home }}/etc/auth/splunk.secret"
    owner: "{{splunk_user}}"
    group: "{{splunk_group}}"
    mode: 0400
  when: splunk_secret_share[splunk_install_app] == true and splunk_secret_file.stat.exists == true

- name: create hashed password for new password policy
  tags:
    - splunk
    - splunk_software
    - splunk_install
    - splunk_password
  command: "{{ splunk_home }}/bin/splunk hash-passwd '{{splunk_admin_password}}'"
  become: yes
  become_user: "{{ splunk_user }}"
  register: admin_hash_pw
  when: splunk_installed_version is version_compare('7.1', '>=') and splunk_install_app == "splunk"

- name: "creating user-seed.conf"
  tags:
    - splunk
    - splunk_software
    - splunk_install
    - splunk_password
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/user-seed.conf"
    section: user_info
    option: "{{ item.varkey }}"
    value: "{{ item.varvalue }}"
    owner: "{{splunk_user}}"
    group: "{{splunk_group}}"
    mode: 0600
  with_items:
    - { varkey: "USERNAME", varvalue: "admin" }
    - { varkey: "HASHED_PASSWORD", varvalue: "{{ admin_hash_pw.stdout }}" }
  when: splunk_installed_version is version_compare('7.1', '>=') and splunk_install_app == "splunk"

- name: enable wiredTiger KV Store
  tags:
    - splunk
    - splunk_software
    - splunk_install
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf"
    section: kvstore
    option: storageEngine
    value: wiredTiger
    owner: "{{splunk_user}}"
    group: "{{splunk_group}}"
    mode: 0600
  when: 
    - splunk_installed_version is version_compare('8.1', '>=')
    - splunk_install_app == "splunk"
    - splunk_kv_store_engine_wiredtiger|default(true) == true

- name: call start_accept_license_and_stop
  tags:
    - splunk
    - splunk_software
    - splunk_install
  include_tasks: start_accept_license_and_stop.yml
  when: splunk_installed_version is version_compare('7.2.2', '<')

- name: call enable_boot-start
  tags:
    - splunk
    - splunk_software
    - splunk_install
  include_tasks: enable_boot-start.yml

- name: enable and start splunk service
  tags:
    - splunk
    - splunk_software
    - splunk_install
  service:
    name: "{{ splunk_service_name }}"
    state: started
    enabled: yes
  when: use_systemctl == true

- name: call check_systemd_file from splunk_common
  tags:
    - splunk
    - splunk_software
    - splunk_install
  include_role:
    name: splunk_common
    tasks_from: check_systemd_file

- name: change splunk admin password
  tags:
    - splunk
    - splunk_software
    - splunk_install
    - splunk_password
  command: "{{ splunk_home }}/bin/splunk edit user admin -password '{{splunk_admin_password}}' -auth admin:changeme"
  become: yes
  become_user: "{{ splunk_user }}"
  when: splunk_installed_version is version_compare('7.1', '<') and splunk_install_app == "splunk"

- name: call add_custom_policykit
  tags:
    - splunk
    - splunk_software
    - splunk_install
    - splunk_polkit
  include_tasks: add_custom_policykit.yml
  when: 
    - use_policykit == true
    - use_systemctl == true
    - use_splunk_systemd|default(false) == true
    - splunk_create_polkit_rules is not defined

- name: call add_splunk_sudoers
  tags:
    - splunk
    - splunk_software
    - splunk_install
    - splunk_sudoers
  include_tasks: add_splunk_sudoers.yml
  when: 
    - use_policykit == false
    - use_systemctl == true
    - use_splunk_systemd|default(false) == true
