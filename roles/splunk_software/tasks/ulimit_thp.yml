---
# This playbook install the apps required in a server

- name: checking if splunk init.d file is installed
  tags:
    - splunk
    - splunk_software
  stat:
    path: "/etc/init.d/splunk"
  register: splunk_initd

- name: splunk is installed here
  tags:
    - splunk
    - splunk_software
  set_fact:
  when: splunk_path.stat.exists

- name: add disable THP in /etc/rc.local
  tags:
    - splunk
    - splunk_software
    - splunk_disable_thp
  blockinfile:
    path: /etc/rc.local
    insertbefore: "^exit 0"
    create: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK (THP)"
    content: |
      #SPLUNK: disable THP at boot time
      THP=`find /sys/kernel/mm/ -name transparent_hugepage -type d | tail -n 1`
      for SETTING in "enabled" "defrag";do
          if test -f ${THP}/${SETTING}; then
              echo never > ${THP}/${SETTING}
          fi
      done
  when: splunk_initd.stat.exists == true

- name: "install /etc/security/limits.d/splunk.conf"
  tags:
    - splunk
    - splunk_software
    - splunk_ulimits
  template:
    src: "etc/security/limits.d/splunk.conf.j2"
    dest: "/etc/security/limits.d/splunk.conf"
    owner: root
    group: root
    mode: 0644
  when: splunk_initd.stat.exists == true

- name: add disable_huge and change_ulimits functions to /etc/init.d/splunk
  tags:
    - splunk
    - splunk_software
    - splunk_ulimits
    - splunk_disable_thp
  blockinfile:
    path: /etc/init.d/splunk
    marker: "# {mark} ANSIBLE MANAGED BLOCK (functions)"
    insertbefore: "^case"
    content: |
      # disable hugepages
      disable_huge() {
       echo "disabling huge page support"
       THP=`find /sys/kernel/mm/ -name transparent_hugepage -type d | tail -n 1`
       for SETTING in "enabled" "defrag";do
           if test -f ${THP}/${SETTING}; then
               echo never > ${THP}/${SETTING}
           fi
       done
      }

      # change ulimits
      change_ulimit() {
        ulimit -Hn 65535
        ulimit -Sn 65535
        ulimit -Hu 20480
        ulimit -Su 20480
        ulimit -Hf unlimited
        ulimit -Sf unlimited
      }
  when: splunk_initd.stat.exists == true

- name: enable usage of functions during start in /etc/init.d/splunk
  tags:
    - splunk
    - splunk_software
    - splunk_ulimits
    - splunk_disable_thp
  blockinfile:
    path: /etc/init.d/splunk
    marker: "    # {mark} ANSIBLE MANAGED BLOCK (start)"
    insertbefore: "splunk_start$"
    content: |2
          disable_huge
          change_ulimit
  when: splunk_initd.stat.exists == true

- name: enable usage of functions during restart in /etc/init.d/splunk
  tags:
    - splunk
    - splunk_software
    - splunk_ulimits
    - splunk_disable_thp
  blockinfile:
    path: /etc/init.d/splunk
    marker: "    # {mark} ANSIBLE MANAGED BLOCK (restart)"
    insertbefore: "splunk_restart$"
    content: |2
          disable_huge
          change_ulimit
  when: splunk_initd.stat.exists == true

- name: commit changes to systemctl
  tags:
    - splunk
    - splunk_software
  command: systemctl daemon-reload
  when: use_systemctl == true and splunk_initd.stat.exists == true
