---

- name: call get_idxc_peerids
  tags:
    - splunk
    - splunk_software
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  include_tasks: get_idxc_peerids.yml

- name: set idxc_peerid
  tags:
    - splunk
    - splunk_software
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  set_fact:
    idxc_peerid:  "{{ idxc_name_peerids | json_query(query) }}"
  vars:
    query: "[? name=='{{ inventory_hostname }}'].peerid"

- name: call get_idxc_peer_status
  tags:
    - splunk
    - splunk_software
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  include_tasks: get_idxc_peer_status.yml

- name: fail if peer has wrong state
  tags:
    - splunk
    - splunk_software
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  fail:
    msg: "Cluster Peer {{ inventory_hostname }} has wrong state '{{ idxc_peer_status }}'"
  when:
    - idxc_peer_status != 'Up'
    - idxc_peer_status != 'Down'
    - idxc_peer_status != 'ReassigningPrimaries'

- name: offline indexer
  tags:
    - splunk
    - splunk_software
    - splunk_rest
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  include_tasks: splunk_rest.yml
  vars:
    splunk_rest_endpoint: /services/cluster/slave/control/control/decommission
    http_method: POST
  when: idxc_peer_status == 'Up'

# There is not 'loop until' with include_tasks. So, we need to code the rest call directly here.
- name: check for peer to be down
  tags:
    - splunk
    - splunk_software
    - splunk_rest
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  uri:
    url: "https://localhost:8089//services/cluster/master/peers/{{ idxc_peerid|first }}"
    user: admin
    password: "{{ splunk_admin_password }}"
    method: "GET"
    body_format: form-urlencoded
    body:
      output_mode: "json"
    return_content: yes
    force_basic_auth: yes
    validate_certs: no
  register: splunk_rest_output_local
  vars:
    splunk_rest_json_output_local: "{{ splunk_rest_output_local.content|to_json|from_json }}"
  check_mode: no
  until: "splunk_rest_json_output_local.entry[0].content.status == 'Down'"
  # Wait 30 minutes to complete this step
  retries: 30
  delay: 60
  delegate_to: "{{ splunk_idxc_cm }}"

- name: call upgrade
  tags:
    - splunk
    - splunk_software
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  include_tasks: upgrade.yml

# There is not 'loop until' with include_tasks. So, we need to code the rest call directly here.
- name: check for peer to be up
  tags:
    - splunk
    - splunk_software
    - splunk_rest
    - splunk_upgrade
    - splunk_upgrade_idxc_rolling
  uri:
    url: "https://localhost:8089//services/cluster/master/peers/{{ idxc_peerid|first }}"
    user: admin
    password: "{{ splunk_admin_password }}"
    method: "GET"
    body_format: form-urlencoded
    body:
      output_mode: "json"
    return_content: yes
    force_basic_auth: yes
    validate_certs: no
  register: splunk_rest_output_local
  vars:
    splunk_rest_json_output_local: "{{ splunk_rest_output_local.content|to_json|from_json }}"
  check_mode: no
  until: "splunk_rest_json_output_local.entry[0].content.status == 'Up'"
  # Wait 10 minutes to complete this step
  retries: 40
  delay: 15
  delegate_to: "{{ splunk_idxc_cm }}"