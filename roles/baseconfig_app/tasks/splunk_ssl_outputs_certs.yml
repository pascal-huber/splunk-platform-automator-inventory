---
# This playbook installs certs for ssl on inputs

- name: check sslRootCAPath filename to copy
  tags:
    - splunk
    - splunk_baseconfig
    - outputs_ssl
  stat:
    path: "{{ splunk_auth_dir }}/{{ item }}"
  with_items:
    - "{{ splunk_ssl.outputs.config.sslRootCAPath|basename|default('cacert.pem') }}"
  register: cacert_pems
  delegate_to: localhost
  become: no
  when: splunk_ssl.outputs.enable == true and splunk_ssl.outputs.own_certs == true

- name: check sslCertPath filename to copy
  tags:
    - splunk
    - splunk_baseconfig
    - outputs_ssl
  stat:
    path: "{{ splunk_auth_dir }}/{{ item }}"
  with_items:
    - "{{ splunk_ssl.outputs.config.sslCertPath|basename|default('client.pem') }}"
  register: client_pems
  delegate_to: localhost
  become: no
  when: splunk_ssl.outputs.enable == true and splunk_ssl.outputs.own_certs == true

- name: set cert file names
  tags:
    - splunk
    - splunk_baseconfig
    - outputs_ssl
  set_fact:
    cacert_pem: "{% for result in cacert_pems.results %}{% if result.stat.exists == true %}{{ result.item }}{% endif %}{% endfor %}"
    client_pem: "{% for result in client_pems.results %}{% if result.stat.exists == true %}{{ result.item }}{% endif %}{% endfor %}"
  when: splunk_ssl.outputs.enable == true and splunk_ssl.outputs.own_certs == true

#FIXME: Fix the error message to include the correct filename
- name: fail if no cacert found
  tags:
    - splunk
    - splunk_baseconfig
    - outputs_ssl
  fail:
    msg: "Cannot find a cacert.pem file for host '{{ inventory_hostname }}' in the '{{ splunk_auth_dir }}' directory!"
  when: splunk_ssl.outputs.enable == true and splunk_ssl.outputs.own_certs == true and cacert_pem == ""

#FIXME: Fix the error message to include the correct filename
- name: fail if no pem cert found
  tags:
    - splunk
    - splunk_baseconfig
    - outputs_ssl
  fail:
    msg: "Cannot find a .pem file for host '{{ inventory_hostname }}' in the '{{ splunk_auth_dir }}' directory!"
  when: splunk_ssl.outputs.enable == true and splunk_ssl.outputs.own_certs == true and client_pem == ""

- name: create path for custom certs
  tags:
    - splunk
    - splunk_baseconfig
    - outputs_ssl
  file:
    state: directory
    recurse: true
    path: "{{ app_path }}/{{ app_dest_name }}/default"
    owner: "{{splunk_user}}"
    group: "{{splunk_group}}"
  when: splunk_ssl.outputs.enable == true and splunk_ssl.outputs.own_certs == true

- name: copy certs file for inputs ssl
  tags:
    - splunk
    - splunk_baseconfig
    - outputs_ssl
  copy:
    src: "{{ splunk_auth_dir }}/{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{splunk_user}}"
    group: "{{splunk_group}}"
    mode: 0600
  with_items:
    - { src: '{{ cacert_pem }}', dest: "{{ app_path }}/{{ app_dest_name }}/default" }
    - { src: '{{ client_pem }}', dest: "{{ app_path }}/{{ app_dest_name }}/default" }
  when: splunk_ssl.outputs.enable == true and splunk_ssl.outputs.own_certs == true
