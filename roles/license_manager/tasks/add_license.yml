---
# This playbook installs a splunk license

- name: get guid of source license file
  tags:
    - splunk
    - license_manager
  xml:
    path: "{{ splunk_software }}/{{ splunk_license_file_name }}"
    xpath: /license/payload/guid
    content: 'text'
  register: lic_guid_src
  delegate_to: localhost
  become: no

- name: "check for license guid {{ lic_guid_src.matches[0].guid }} in splunk"
  tags:
    - splunk
    - license_manager
  command: "{{ splunk_home }}/bin/splunk list license -auth admin:{{splunk_admin_password}}"
  become: yes
  become_user: "{{ splunk_user }}"
  register: grep_result
  check_mode: no
  changed_when: false

- name: copy license file to tmp location
  tags:
    - splunk
    - license_manager
  copy:
    src: "{{ splunk_software }}/{{ splunk_license_file_name }}"
    dest: "/tmp/{{ splunk_license_file_name }}"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_group }}"
  when: grep_result.stdout is not search(lic_guid_src.matches[0].guid)

- name: add license file to splunk
  tags:
    - splunk
    - license_manager
  command: "{{ splunk_home }}/bin/splunk add license /tmp/{{ splunk_license_file_name }} -auth admin:{{splunk_admin_password}}"
  become: yes
  become_user: "{{ splunk_user }}"
  when: grep_result.stdout is not search(lic_guid_src.matches[0].guid)
  notify: restart splunk

- name: remove license file from tmp location
  tags:
    - splunk
    - license_manager
  file:
    path: "/tmp/{{ splunk_license_file_name }}"
    state: absent
