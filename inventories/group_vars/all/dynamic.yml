---

# Calculated variables during playbook run

# Software source directory
splunk_software: "{% if splunk_software_dir | regex_search('^/') %}{{ splunk_software_dir }}{% else %}{{ playbook_dir }}/../{{ splunk_software_dir }}{% endif %}"

# Baseconfig apps directory
splunk_baseconfig: "{% if splunk_baseconfig_dir | regex_search('^/') %}{{ splunk_baseconfig_dir }}{% else %}{{ playbook_dir }}/../{{ splunk_baseconfig_dir }}{% endif %}"
splunk_app_prefix: "{{ splunk_env_name|default('splunk') }}"

# Splunk hostnames with ip_addr
splunk_hosts_entries: >-
          {%- for hostname in hostvars.keys()|list -%}{%- if 'ip_addr' in hostvars[hostname] -%}
            {{ hostvars[hostname]['ip_addr'] }} {{ hostname }}
          {% endif %}{% endfor %}

# Splunk Roles
splunk_roles: >-
          {%- set res = [] -%}
          {%- for role_name in groups|map('regex_search','role_.*')|select('string')|list -%}
            {%- if inventory_hostname in groups[role_name] -%}
              {%- set ignored = res.extend([role_name|replace("role_","")]) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ res|join(', ') }}

# Output Definitions
splunk_outputs_idxc_list: >-
          {%- set res = {} -%}
          {%- for idxc in splunk_idxc_name_list -%}
            {%- set ignored = res.update({idxc: splunk_output_list['idxcluster'][idxc]}) -%}
          {%- endfor -%}
          {{ res }}
splunk_outputs_idx_list: "{{ splunk_output_list['indexer']|default([])|intersect(groups['splunk_env_'+splunk_env_name]) }}"
splunk_outputs_name_list: >-
          {%- set res = [] -%}
          {%- for host in groups['all']|intersect(groups['splunk_env_'+splunk_env_name]) -%}
            {%- set ignored = res.extend([hostvars[host]['splunk_outputs']]) -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_outputs_tcpout_list: >-
          {%- set res = [] -%}
          {%- for idxc in splunk_outputs_idxc_list.keys() -%}
            {%- set ignored = res.extend([idxc]) -%}
          {%- endfor -%}
          {%- if splunk_outputs_idx_list|length > 0 -%}
            {%- set ignored = res.extend(['all']) -%}
          {%- endif -%}
          {{ res }}
splunk_outputs_discovery_idxc_list: >-
          {%- set res = [] -%}
          {%- for cm in splunk_idxc_cm_list -%}
            {%- if 'idxc_discovery_password' in hostvars[cm] -%}
              {%- set ignored = res.extend([{'master': cm, 'idxc_name': hostvars[cm]['idxc_name'], 'password': hostvars[cm]['idxc_discovery_password'] }]) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ res }}

# Search Peer Definitions
splunk_search_peer_idxc_list: "{{ splunk_search_peer_list['idxcluster']|default([]) }}"
splunk_search_peer_idx_list: "{{ splunk_search_peer_list['indexer']|default([]) }}"
splunk_search_peer_name_list: >-
          {%- set res = [] -%}
          {%- for host in groups['all']|intersect(groups['splunk_env_'+splunk_env_name]) -%}
            {%- set ignored = res.extend([hostvars[host]['splunk_search_peers']]) -%}
          {%- endfor -%}
          {{ res|unique }}

# Indexer Cluster
splunk_idxc_name_list_all_env: "{{ groups|map('regex_search','idxcluster_.*')|select('string')|list }}"
splunk_idxc_label: "{{ idxc_name }}"
splunk_idxc_pass: "{{ idxc_password }}"
splunk_idxc_replication_port: "{{ idxc_replication_port }}"
splunk_idxc_rf: "{{ idxc_rf }}"
splunk_idxc_sf: "{{ idxc_sf }}"
splunk_idxc_cm: "{% for cm in groups.role_cluster_manager|default([]) %}{% if cm in groups['idxcluster_'+idxc_name] %}{{ cm }}{% endif %}{% endfor %}"
splunk_idxc_cm_list: >-
           {%- set res = [] -%}
           {%- for idxc in splunk_idxc_name_list_all_env -%}
             {% set ignored = res.extend(groups[idxc]|list) -%}
           {%- endfor -%}
           {{ res|unique|intersect(groups.role_cluster_manager|default([]))|intersect(groups['splunk_env_'+splunk_env_name]) }}
splunk_idxc_name_list: >-
           {%- set res = [] -%}
           {%- for idxc in splunk_idxc_name_list_all_env -%}
             {%- for cm in splunk_idxc_cm_list -%}
               {%- if cm in groups[idxc] -%}
                 {%- set ignored = res.extend([idxc|regex_replace('idxcluster_','')]) -%}
               {%- endif -%}
             {%- endfor -%}
           {%- endfor -%}
           {{ res|unique }}
splunk_idxc_indexer_list: "{{ groups.role_indexer|default([])|intersect(splunk_idxc_all_host_list|default([]))|intersect(groups['splunk_env_'+splunk_env_name]) }}"
splunk_manager_uri_var: "{%- if splunk_installed_version is version_compare('9.0', '>=') -%}manager_uri{%- else -%}master_uri{%- endif -%}"
splunk_clustermanager_var: "{%- if splunk_installed_version is version_compare('9.0', '>=') -%}clustermanager{%- else -%}clustermaster{%- endif -%}"
splunk_cluster_manager_mode: "{%- if splunk_installed_version is version_compare('9.0', '>=') -%}manager{%- else -%}master{%- endif -%}"
splunk_cluster_peer_mode: "{%- if splunk_installed_version is version_compare('9.0', '>=') -%}peer{%- else -%}slave{%- endif -%}"
splunk_cluster_manager_apps: "{%- if splunk_installed_version is version_compare('9.0', '>=') -%}manager-apps{%- else -%}master-apps{%- endif -%}"

# Multisite Indexer Cluster
splunk_idxc_available_sites: "{{ idxc_available_sites|default([])|join(',') }}"
splunk_idxc_site_rf: "{{ idxc_site_rf }}"
splunk_idxc_site_sf: "{{ idxc_site_sf }}"

# Single Indexer
splunk_idxc_all_host_list: >-
          {%- set res = [] -%}
          {%- for group in splunk_idxc_name_list_all_env -%}
            {%- set ignored = res.extend(
              groups[group]
              ) -%}
          {%- endfor -%}
          {{ res|unique|intersect(groups.role_indexer|default([])) }}
splunk_indexer_list: "{{ groups.role_indexer|default([])|difference(splunk_idxc_all_host_list|default([]))|intersect(groups['splunk_env_'+splunk_env_name]) }}"

# Heavy Forwarder
splunk_heavy_forwarder_list: "{{ groups.role_heavy_forwarder|default([])|intersect(groups['splunk_env_'+splunk_env_name]) }}"

# Single Search Head
splunk_shc_name_list: "{{ groups|map('regex_search','shcluster_.*')|select('string')|list }}"
splunk_shc_all_host_list: >-
          {%- set res = [] -%}
          {%- for group in splunk_shc_name_list -%}
            {%- set ignored = res.extend(
              groups[group]|list
              ) -%}
          {%- endfor -%}
          {{ res|unique|intersect(groups.role_search_head|default([]))|intersect(groups['splunk_env_'+splunk_env_name]) }}
splunk_search_head_list: "{{ groups.role_search_head|default([])|union(groups.role_monitoring_console|default([]))|difference(splunk_shc_all_host_list|default([]))|difference(groups.role_cluster_manager|default([]))|intersect(groups['splunk_env_'+splunk_env_name]) }}"

# Search Head Cluster
splunk_shc_label: "{{ shc_name }}"
splunk_shc_site: "{%- if shc_site is defined -%}{{ shc_site }}{%- else -%}site0{%- endif -%}"
splunk_shc_pass: "{{ shc_password }}"
splunk_shc_replication_port: "{{ shc_replication_port }}"
splunk_shc_host_list: >-
          {%- set res = [] -%}
          {%- for sh in groups.role_search_head|default([]) -%}
            {%- if sh in groups['shcluster_'+shc_name] -%}
              {%- set ignored = res.extend([sh]) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_shc_deployer: "{% for dp in groups.role_deployer|default([]) %}{% if dp in groups['shcluster_'+shc_name] %}{{ dp }}{% endif %}{% endfor %}"
splunk_shc_dp_list: >-
          {%- set res = [] -%}
          {%- for shc in splunk_shc_name_list -%}
            {%- set ignored = res.extend(groups[shc]|list) -%}
          {%- endfor -%}
          {{ res|unique|intersect(groups.role_deployer|default([]))|intersect(groups['splunk_env_'+splunk_env_name]) }}


# Deployment Server
splunk_deployment_server: "{{groups.role_deployment_server|default([])|intersect(groups['splunk_env_'+splunk_env_name])|default([])}}"
splunk_idx_dsclients: >-
          {%- set res = [] -%}
          {%- for ds_client in splunk_indexer_list|difference([splunk_deployment_server|first]) -%}
            {%- set ignored = res.extend([{'server': ds_client, 'num':loop.index0}]) -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_idx_hf_dsclients: >-
          {%- set res = [] -%}
          {%- for ds_client in splunk_indexer_list|union(splunk_heavy_forwarder_list)|difference([splunk_deployment_server|first]) -%}
            {%- set ignored = res.extend([{'server': ds_client, 'num':loop.index0}]) -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_sh_dsclients: >-
          {%- set res = [] -%}
          {%- for ds_client in splunk_search_head_list|union(splunk_monitoring_console)|difference([splunk_deployment_server|first])|difference(groups.role_cluster_manager|default([])) -%}
            {%- set ignored = res.extend([{'server': ds_client, 'num':loop.index0}]) -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_sh_hf_dsclients: >-
          {%- set res = [] -%}
          {%- for ds_client in splunk_search_head_list|union(splunk_heavy_forwarder_list)|difference([splunk_deployment_server|first]) -%}
            {%- set ignored = res.extend([{'server': ds_client, 'num':loop.index0}]) -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_idx_hf_sh_dsclients: >-
          {%- set res = [] -%}
          {%- for ds_client in splunk_indexer_list|union(splunk_heavy_forwarder_list)|union(splunk_search_head_list)|difference([splunk_deployment_server|first]) -%}
            {%- set ignored = res.extend([{'server': ds_client, 'num':loop.index0}]) -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_hf_sh_lm_cm_ds_dp_mc_dsclients: >-
          {%- set res = [] -%}
          {%- for ds_client in splunk_heavy_forwarder_list|union(splunk_search_head_list)|union(splunk_license_manager)|union(splunk_idxc_cm_list)|union(splunk_deployment_server)|union(splunk_shc_dp_list)|union(splunk_monitoring_console)|difference([splunk_deployment_server|first]) -%}
            {%- set ignored = res.extend([{'server': ds_client, 'num':loop.index0}]) -%}
          {%- endfor -%}
          {{ res|unique }}
splunk_license_dsclients: >-
          {%- set res = [] -%}
          {%- for ds_client in groups.all|intersect(groups['splunk_env_'+splunk_env_name])|unique|difference(splunk_idxc_all_host_list)|difference(splunk_shc_all_host_list|default([]))|difference(groups.role_license_manager|default([]))|difference(groups.role_universal_forwarder|default([]))|difference([splunk_deployment_server|first]) -%}
            {%- set ignored = res.extend([{'server': ds_client, 'num':loop.index0}]) -%}
          {%- endfor -%}
          {{ res|unique }}

# Splunk Monitoring Console
splunk_monitoring_console: "{{groups.role_monitoring_console|default([])|intersect(groups['splunk_env_'+splunk_env_name])|default([])}}"
splunk_dservers: "{{ groups.all|intersect(groups['splunk_env_'+splunk_env_name])|unique|difference(splunk_idxc_all_host_list)|difference(groups.role_monitoring_console|default([]))|difference(groups.role_universal_forwarder|default([])) }}"

# License Server
splunk_license_manager: >-
          {%- set res = [] -%}
          {%- if splunk_license_server is defined -%}
            {%- set ignored = res.extend([splunk_license_server]) -%}
            {{ res|unique }}
          {%- else -%}
            {{groups.role_license_manager|default([])|intersect(groups['splunk_env_'+splunk_env_name])|default([])}}
          {%- endif -%}

# Systemd
splunk_systemd_services_updates: >-
          {%- set res = [] -%}
          {%- for section in splunk_systemd_services[splunk_service_name].keys()|list -%}
            {%- for var in splunk_systemd_services[splunk_service_name][section].keys()|list -%}
              {%- set ignored = res.extend([{'section': section, 'var': var, 'val': splunk_systemd_services[splunk_service_name][section][var] }]) -%}
            {%- endfor -%}
          {%- endfor -%}
          {{ res }}

# Splunk Config Settings
splunk_conf_settings_list: >-
          {%- set res = [] -%}
          {%- for section_name in splunk_conf_list_items.value.keys()|list -%}
            {%- for section_item_key in splunk_conf_list_items.value[section_name].keys()|list -%}
              {%- set ignored = res.extend([{'section': section_name, 'key': section_item_key, 'value': splunk_conf_list_items.value[section_name][section_item_key] }]) -%}
            {%- endfor -%}
          {%- endfor -%}
          {{ res }}

# App Deployment
splunk_all_roles_list: "{{groups|map('regex_search','role_.*')|select('string')|list|replace('role_', '')}}"
splunk_app_roles_host_list: >-
          {%- set res = [] -%}
          {%- for role in splunk_apps_list_item.pkg.roles|default(splunk_all_roles_list) -%}
            {%- set ignored = res.extend(groups['role_'+role]) -%}
          {%- endfor -%}
          {{ res|unique }}

# Volume Calculations
splunk_indexer_volumes_local: >-
      {%- set defaultpath = splunk_home+'/var/lib/splunk' -%}
      {%- if splunk_indexer_volumes is mapping -%}
        {%- set res = {} -%}
        {%- for volume, properties in splunk_indexer_volumes|default(dict({'primary':{}})) | dictsort -%}
          {%- if properties is not mapping -%}
            {%- set properties = {'path': defaultpath} -%}
          {%- endif -%}
          {%- if properties.storageType|default("local") != "remote" -%}
            {%- if properties.path is not defined -%}
              {%- set ignored = properties.update({'path': defaultpath}) -%}
            {%- endif -%}
            {%- set ignored = res.update({volume: properties}) -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if res.keys()|list|length > 0 -%}
          {{ res }}
        {%- else -%}
          {{ {'primary':{'path': defaultpath}} }}
        {%- endif -%}
      {%- else -%}
        {{ {'primary':{'path': defaultpath}} }}
      {%- endif -%}
splunk_indexer_volumes_remote: >-
      {%- set res = {} -%}
      {%- if splunk_indexer_volumes is mapping -%}
        {%- for volume, properties in splunk_indexer_volumes | dictsort -%}
          {%- if properties.storageType|default("local") == "remote" -%}
            {%- set ignored = res.update({volume: properties}) -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
      {{ res }}

splunk_indexes_path_settings: >-
      {%- set res = {} -%}
      {%- set properties_tmp = {} -%}
      {%- for index, properties in splunk_indexes|default(dict({})) | dictsort -%}
        {%- if properties -%}{%- else -%}{%- set properties = {} -%}{%- endif -%}
        {%- if 'homePath' in properties -%}{%- else -%}
          {%- set volumename = splunk_volume_defaults.homePath|default('primary') -%}
          {%- set ignored = properties_tmp.update({'homePath': 'volume:'+ volumename +'/$_index_name/db'}) -%}
        {%- endif -%}
        {%- if 'coldPath' in properties -%}{%- else -%}
          {%- set volumename = splunk_volume_defaults.coldPath|default('primary') -%}
          {%- set ignored = properties_tmp.update({'coldPath': 'volume:'+ volumename +'/$_index_name/colddb'}) -%}
        {%- endif -%}
        {%- if 'thawedPath' in properties -%}{%- else -%}
          {%- set ignored = properties_tmp.update({'thawedPath': '$SPLUNK_DB/$_index_name/thaweddb'}) -%}
        {%- endif -%}
        {%- set ignored = res.update({index: properties_tmp}) -%}
      {%- endfor -%}
      {%- if res.keys()|list|length >= 0 -%}
        {{ res }}
      {%- endif -%}

splunk_indexes_settings: >-
      {%- set res = {} -%}
      {%- for index, properties in splunk_indexes|default(dict({})) | dictsort -%}
        {%- if properties -%}{%- else -%}{%- set properties = {} -%}{%- endif -%}
        {%- set ignored = res.update({index: properties}) -%}
      {%- endfor -%}
      {%- if res.keys()|list|length >= 0 -%}
        {{ res }}
      {%- endif -%}
